---
title: "Class 09 Halloween Candy Mini Proj"
author: "Dylan Mullaney (A16869792)"
format: pdf
---

Today we will examine data from 538 on common Halloween candy. In this particular project we will use ggplot, dplyr, and PCA to make sense of the multivariable dataset. 

## Importing candy data 

For a txt file, could use read.table

```{r}
url <- "https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv"
candy <- read.csv (url, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
#This is a count value, not a percent
```

Winpercent refers to the likelihood a candy will be chosen as the winner.

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Haribo Happy Cola",] $winpercent
#This is a percent value, not a count
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",] $winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",] $winpercent
```

How many candies are chocolate?

```{r}
sum(candy$chocolate)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Winpercent appears to be on different scale. 

```{r}
#Install package in R brain
library("skimr")
skim(candy)
```


>Q7. What do you think a zero and one represent for the candy$chocolate column?

This represents a candy that doesn't match this identity, ie it isn't chocolate.

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)

ggplot (candy) + 
       aes(winpercent) +
       geom_histogram(bins=10, fill="lightpink")
```



> Q9. Is the distribution of winpercent values symmetrical?

No, based on the shape of the histogram.

> Q10. Is the center of the distribution above or below 50%?

It appears to be below 50%. Mean is above 50, but the median is below. 

```{r}
summary(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

-Step 1: find all chocolate candy
-Step 2: find their winpercent values
-Step 3: summarize these values (mean, median)
-Step 4: repeat with fruit candies
-Step 5: compare the two summart values

Step 1
```{r}
choc.inds <- candy$chocolate == 1
candy[choc.inds,]
```

Step 2
```{r}
choc.win <- candy[choc.inds,]$winpercent
choc.win
```

Step 3
```{r}
choc.mean <- mean(choc.win)
choc.mean
```

Step 4
```{r}
fruit.inds <- candy$fruity == 1
candy[fruit.inds,]
```

```{r}
fruit.win <- candy[fruit.inds,]$winpercent
fruit.win
```

```{r}
fruit.mean<- mean(fruit.win)
fruit.mean
```

It appears that the mean of fruity candy is much lower than the mean of chocolate candy, comparing 61% to 44%.

```{r}
choc.mean
fruit.mean
```

> Q12. Is this difference statistically significant?

Yes, this t-test states that the values are not equal and the different is statistically different based on the p value.
```{r}
t.test(choc.win, fruit.win)
```

## Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, Jawbusters

```{r}
# Not that useful, sorts values numerically
sort(candy$winpercent)
```

```{r}
x<- c(10,1,100)
sort (x)
```

```{r}
x[order(x)]
```

The `order()` function tells us how to arrange the elements of the input to make them sorted - i.e. how to order them. 

We can determine the order of winprecent to make them sorted and use that order to arrange the whole dataset.

```{r}
ord.inds <- order(candy$winpercent)
#tells which number candy is lowest to highest
head(candy[ord.inds, ])
```

> Q14. What are the top 5 all time favorite candy types out of this set?

Reese's pieces, Snickers, Kit Kat, Twix, Reese's miniatures

```{r}
tail(candy[ord.inds,])
```

Another option
```{r}
# order.inds <- order(cnady$winpercent, decreasing =T)
# pull heading
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot (candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot (candy) +
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

### Let's add some useful colors

This is not helpful, there isn't a scale from 0 to 1
```{r}
ggplot (candy) +
  aes(winpercent, reorder(rownames(candy), winpercent), fill=chocolate) +
  geom_col()
```

We need to make our own spearate color vector whwere we can spell our exactly what candy is colored a particular color. 

```{r}
mycols <- rep("gray", nrow(candy))

mycols[candy$chocolate == 1] <- "chocolate"
mycols[candy$fruity == 1] <- "green"

mycols
```

```{r}
ggplot (candy) +
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill=mycols)
```
Both these functions work the same way to get out T/F values
```{r}
c(1,0,1) ==1
as.logical(c(1,0,1))
```



> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

## Let's look at pricepercent

Making a plot of winpercent(x) versus pricepercent(y)
```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) +
  geom_text()
```

To avoid overplotting of the text labels, we can use an add-on package `ggrepel`

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) +
  geom_text_repel(max.overlaps = 6) + 
  theme_bw()
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

Hershey's Krackel, Nik L Nip, Ring Pop, Nestle Smarties, and Hershey's Milk Chocolate. Nik L Nip is the least popular. 

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )

```

## Exploring the correlation structure

```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```

Down the diagonal there is a perfect 1 correlation because its comparing to itself. -1 is high negative correlation, +1 is high positive correlation. 

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate.

> Q23. Similarly, what two variables are most positively correlated?

Winpercent and chocolate. 

## PCA

```{r}
pca<- prcomp(candy, scale=T)
summary(pca)
```

Let's plot our main resulst as our PCA "score plot"

```{r}
ggplot(pca$x) +
  aes(PC1, PC2, label=rownames(pca$x))+
  geom_point(col=mycols) +
  geom_text_repel(col=mycols)
```

```{r}
summary(pca)
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

PC1 has a strong positive correlation with our fruity candies, things that are hard and come with multiple items in one package. This makes sense because all these variables are connection, in that fruity candies are more often hard and come with multiple items in a package. 

```{r}
#barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")

ggplot(pca$rotation) +
  aes(PC1, reorder(rownames(pca$rotation), PC1)) +
  geom_col()    
```


